services:
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    restart: unless-stopped
    ports:
      - "3000:8080"   # Traefik targets http://<host>:3000
    environment:
      ENABLE_PERSISTENT_CONFIG: "true"

      # Local models (optional; CPU inference possible, but youâ€™ll use OpenRouter for heavy models)
      OLLAMA_BASE_URL: http://ollama:11434

      # Hosted models via OpenRouter (OpenAI-compatible)
      OPENAI_API_BASE_URL: https://openrouter.ai/api/v1
      OPENAI_API_KEY: ${OPENROUTER_API_KEY}

      # Vector DB for RAG
      VECTOR_DB: qdrant
      QDRANT_URI: http://qdrant:6333

      # Web search via SearxNG
      ENABLE_WEB_SEARCH: "true"
      WEB_SEARCH_ENGINE: searxng
      WEB_SEARCH_RESULT_COUNT: "3"
      WEB_LOADER_CONCURRENT_REQUESTS: "10"
      SEARXNG_QUERY_URL: http://searxng:8080/search?q=<query>

      # Text-to-Speech via local OpenAI-compatible TTS proxy (openedai-speech -> Piper)
      AUDIO_TTS_ENGINE: openai
      AUDIO_TTS_OPENAI_API_BASE_URL: http://openedai-speech:8000/v1
      AUDIO_TTS_OPENAI_API_KEY: "local-tts"

      # Code execution via Jupyter (Python)
      ENABLE_CODE_INTERPRETER: "true"
      CODE_EXECUTION_ENGINE: jupyter
      CODE_EXECUTION_JUPYTER_URL: http://jupyter:8888
      CODE_EXECUTION_JUPYTER_AUTH: token
      CODE_EXECUTION_JUPYTER_AUTH_TOKEN: ${JUPYTER_TOKEN}
      CODE_EXECUTION_JUPYTER_TIMEOUT: "60"

    volumes:
      - openwebui_data:/app/backend/data
    depends_on:
      - ollama
      - pipelines
      - qdrant
      - searxng
      - openedai-speech
      - jupyter

  pipelines:
    image: ghcr.io/open-webui/pipelines:main
    container_name: pipelines
    restart: unless-stopped
    environment:
      PIPELINES_API_KEY: ${PIPELINES_API_KEY}
    volumes:
      - pipelines_data:/app/pipelines
    # no ports: internal-only

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    volumes:
      - ollama_models:/root/.ollama
    # no ports: internal-only

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: unless-stopped
    volumes:
      - qdrant_data:/qdrant/storage
    # no ports: internal-only

  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    restart: unless-stopped
    environment:
      - SEARXNG_BASE_URL=http://searxng:8080/
    # Optional: mount /etc/searxng for custom settings. Defaults work for basic queries.
    # volumes:
    #   - ./searxng:/etc/searxng:rw
    # no ports: internal-only

  openedai-speech:
    image: ghcr.io/matatonic/openedai-speech:latest
    container_name: openedai-speech
    restart: unless-stopped
    # Optional: mount voices/config to customize Piper voices
    # volumes:
    #   - openedai_speech_voices:/app/voices
    #   - openedai_speech_config:/app/config
    # no ports: internal-only

  jupyter:
    image: jupyter/minimal-notebook:latest
    container_name: jupyter
    restart: unless-stopped
    environment:
      - JUPYTER_TOKEN=${JUPYTER_TOKEN}
      - NB_UID=1000
      - NB_GID=100
    volumes:
      - jupyter_data:/home/jovyan/work
    # no ports: internal-only

  rstudio:
    image: rocker/rstudio:latest
    container_name: rstudio
    restart: unless-stopped
    environment:
      - PASSWORD=${RSTUDIO_PASSWORD}   # user: rstudio
    volumes:
      - rstudio_data:/home/rstudio
    # no ports: internal-only

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    environment:
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    volumes:
      - n8n_data:/home/node/.n8n
    # no ports: internal-only

  # Langfuse (optional observability). Includes Postgres + ClickHouse for best compatibility.
  langfuse-db:
    image: postgres:16-alpine
    container_name: langfuse-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${LANGFUSE_POSTGRES_DB}
      - POSTGRES_USER=${LANGFUSE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${LANGFUSE_POSTGRES_PASSWORD}
    volumes:
      - langfuse_db:/var/lib/postgresql/data

  clickhouse:
    image: clickhouse/clickhouse-server:23.7
    container_name: clickhouse
    restart: unless-stopped
    volumes:
      - clickhouse_data:/var/lib/clickhouse

  langfuse:
    image: langfuse/langfuse:latest
    container_name: langfuse
    restart: unless-stopped
    depends_on:
      - langfuse-db
      - clickhouse
    environment:
      # App URL & auth
      NEXTAUTH_URL: http://langfuse:3000
      NEXTAUTH_SECRET: ${LANGFUSE_NEXTAUTH_SECRET}
      SALT: ${LANGFUSE_SALT}
      AUTH_DISABLE_SIGNUP: "false"
      # Datastores
      DATABASE_URL: postgresql://${LANGFUSE_POSTGRES_USER}:${LANGFUSE_POSTGRES_PASSWORD}@langfuse-db:5432/${LANGFUSE_POSTGRES_DB}?sslmode=disable
      CLICKHOUSE_URL: http://clickhouse:8123
    # no ports: internal-only

  neo4j:
    image: neo4j:5
    container_name: neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
    volumes:
      - neo4j_data:/data
    # no ports: internal-only

volumes:
  openwebui_data:
  pipelines_data:
  ollama_models:
  qdrant_data:
  jupyter_data:
  rstudio_data:
  n8n_data:
  langfuse_db:
  clickhouse_data:
  neo4j_data:
  # openedai_speech_voices:
  # openedai_speech_config: