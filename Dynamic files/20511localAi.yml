http:
  routers:
    qiana-openwebui-router:
      rule: "Host(`qiana-openwebui.valuechainhackers.xyz`)"
      entryPoints: [websecure]
      service: qiana-openwebui-service
      tls:
        certResolver: myresolver

    qiana-flowise-router:
      rule: "Host(`qiana-flowise.valuechainhackers.xyz`)"
      entryPoints: [websecure]
      service: qiana-flowise-service
      tls:
        certResolver: myresolver

    qiana-n8n-router:
      rule: "Host(`qiana-n8n.valuechainhackers.xyz`)"
      entryPoints: [websecure]
      service: qiana-n8n-service
      middlewares:
        - websocket-headers
      tls:
        certResolver: myresolver

    qiana-langfuse-router:
      rule: "Host(`qiana-langfuse.valuechainhackers.xyz`)"
      entryPoints: [websecure]
      service: qiana-langfuse-service
      tls:
        certResolver: myresolver

    qiana-neo4j-router:
      rule: "Host(`qiana-neo4j.valuechainhackers.xyz`)"
      entryPoints: [websecure]
      service: qiana-neo4j-service
      tls:
        certResolver: myresolver

    qiana-searxng-router:
      rule: "Host(`qiana-searxng.valuechainhackers.xyz`)"
      entryPoints: [websecure]
      service: qiana-searxng-service
      tls:
        certResolver: myresolver

    qiana-minio-router:
      rule: "Host(`qiana-minio.valuechainhackers.xyz`)"
      entryPoints: [websecure]
      service: qiana-minio-service
      middlewares:
        - file-upload-limit
      tls:
        certResolver: myresolver

    qiana-supabase-router:
      rule: "Host(`qiana-supabase.valuechainhackers.xyz`)"
      entryPoints: [websecure]
      service: qiana-supabase-service
      tls:
        certResolver: myresolver

  services:
    qiana-openwebui-service:
      loadBalancer:
        servers:
          - url: "http://10.0.5.11:8080"
        passHostHeader: true
        responseForwarding:
          flushInterval: "1ms"
        healthCheck:
          path: /
          interval: "30s"
          timeout: "10s"

    qiana-flowise-service:
      loadBalancer:
        servers:
          - url: "http://10.0.5.11:3001"
        passHostHeader: true
        responseForwarding:
          flushInterval: "1ms"
        healthCheck:
          path: /
          interval: "30s"
          timeout: "10s"

    qiana-n8n-service:
      loadBalancer:
        servers:
          - url: "http://10.0.5.11:5678"
        passHostHeader: true
        responseForwarding:
          flushInterval: "1ms"
        healthCheck:
          path: /
          interval: "30s"
          timeout: "10s"

    qiana-langfuse-service:
      loadBalancer:
        servers:
          - url: "http://10.0.5.11:3000"
        passHostHeader: true
        responseForwarding:
          flushInterval: "1ms"
        healthCheck:
          path: /
          interval: "30s"
          timeout: "10s"

    qiana-neo4j-service:
      loadBalancer:
        servers:
          - url: "http://10.0.5.11:7474"
        passHostHeader: true
        responseForwarding:
          flushInterval: "1ms"
        healthCheck:
          path: /
          interval: "30s"
          timeout: "10s"

    qiana-searxng-service:
      loadBalancer:
        servers:
          - url: "http://10.0.5.11:8081"
        passHostHeader: true
        responseForwarding:
          flushInterval: "1ms"
        healthCheck:
          path: /
          interval: "30s"
          timeout: "10s"

    qiana-minio-service:
      loadBalancer:
        servers:
          - url: "http://10.0.5.11:9011"
        passHostHeader: true
        responseForwarding:
          flushInterval: "1ms"
        healthCheck:
          path: /minio/health/live
          interval: "30s"
          timeout: "10s"

    qiana-supabase-service:
      loadBalancer:
        servers:
          - url: "http://10.0.5.11:8000"
        passHostHeader: true
        responseForwarding:
          flushInterval: "1ms"
        healthCheck:
          path: /
          interval: "30s"
          timeout: "10s"

  middlewares:
    websocket-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "https"
          X-Forwarded-For: ""
          X-Real-IP: ""
        customResponseHeaders:
          X-Forwarded-Proto: "https"

    file-upload-limit:
      buffering:
        maxRequestBodyBytes: 10737418240  # 10GB for file uploads
        retryExpression: "IsNetworkError() && Attempts() < 3"
